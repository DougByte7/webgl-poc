{"version":3,"sources":["shaders/blinn-phong.vert","shaders/blinn-phong.frag","helpers/gl-wrapper.ts","scene-objects/cube.ts","textures/uv-reference.png","components/webgl-canvas/webgl-canvas-container.tsx","helpers/hooks/use-resize.ts","components/common/button/button-view.tsx","components/common/range-input/range-input-view.tsx","components/transform-actions-menu/transform-actions-menu-view.tsx","App.tsx","reportWebVitals.ts","components/common/error-boundary/error-boundary-view.tsx","components/common/error-boundary/error-boundary-container.tsx","index.tsx"],"names":["glCreateBuffer","gl","webGLBuffer","createBuffer","Error","loadShader","type","source","shader","createShader","glCreateShader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","shaderInfoLog","getShaderInfoLog","deleteShader","initShaderProgram","vsSource","fsSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderProgram","program","createProgram","glCreateProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","cubePositions","cubeIndices","cubeTextureCoordinates","cubeVertexNormals","vsBlinnPhong","require","default","fsBlinnPhong","WebGLCanvasContainer","props","isPlaying","scale","rotationX","rotationY","rotationZ","canvas","useRef","useState","setGL","cubeRotation","requestRef","then","texture","sceneObjectPositionBuffer","sceneObjectTextureCoordBuffer","sceneObjectIndicesBuffer","sceneObjectNormalBuffer","modelViewMatrix","window","innerWidth","innerHeight","size","setSize","useLayoutEffect","updateSize","addEventListener","removeEventListener","useWindowSize","width","height","useEffect","current","renderingContext","getContext","getWebGL2RenderingContext","defaultClearColor","clearColor","clear","COLOR_BUFFER_BIT","programInfo","attribLocations","vertexPosition","getAttribLocation","vertexColor","textureCoord","vertexNormal","uniformLocations","projectionMatrix","getUniformLocation","normalMatrix","uSampler","url","createTexture","bindTexture","TEXTURE_2D","internalFormat","RGBA","srcFormat","srcType","UNSIGNED_BYTE","pixel","Uint8Array","texImage2D","isPowerOf2","value","image","Image","onload","generateMipmap","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","LINEAR","src","loadTexture","uvTextureReference","requestAnimationFrame","render","now","deltaTime","info","viewport","clearDepth","enable","DEPTH_TEST","depthFunc","LEQUAL","DEPTH_BUFFER_BIT","fieldOfView","Math","PI","aspect","clientWidth","clientHeight","mat4","create","perspective","translate","rotate","invert","transpose","bindBuffer","ARRAY_BUFFER","bufferData","Float32Array","STATIC_DRAW","vertexAttribPointer","FLOAT","enableVertexAttribArray","ELEMENT_ARRAY_BUFFER","Uint16Array","useProgram","uniformMatrix4fv","activeTexture","TEXTURE0","uniform1i","drawElements","TRIANGLES","UNSIGNED_SHORT","drawScene","cancelAnimationFrame","ref","id","Button","title","children","className","onClick","defaultProps","RangeInput","label","rest","htmlFor","disabled","TransformActionsMenuView","setIsPlaying","setScale","setRotationX","setRotationY","setRotationZ","error","setError","buttonAction","handleChangeInputValue","setter","event","parseFloat","currentTarget","maxRotation","name","min","max","step","onChange","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ErrorBoundaryView","message","errorInfo","componentStack","location","href","ErrorBoundary","state","hasError","this","setState","_error","React","Component","ReactDOM","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.c19d1d44.chunk.js","sourcesContent":["export default \"attribute vec3 aVertexPosition;\\r\\nattribute vec2 aTextureCoord;\\r\\nattribute vec3 aVertexNormal;\\r\\n\\r\\nuniform mat4 uProjectionMatrix;\\r\\nuniform mat4 uModelViewMatrix;\\r\\nuniform mat4 uNormalMatrix;\\r\\n\\r\\nvarying vec3 normalInterp;\\r\\nvarying vec3 vertPos;\\r\\nvarying highp vec2 vTextureCoord;\\r\\n\\r\\nvoid main(){\\r\\n    gl_Position=uProjectionMatrix*uModelViewMatrix*vec4(aVertexPosition,1.);\\r\\n    vec4 vertPos4=uModelViewMatrix*vec4(aVertexPosition,1.);\\r\\n    vertPos=vec3(vertPos4)/vertPos4.w;\\r\\n    normalInterp=vec3(uNormalMatrix*vec4(aVertexNormal,0.));\\r\\n    vTextureCoord=aTextureCoord;\\r\\n}\\r\\n\";","export default \"precision mediump float;\\r\\n\\r\\nvarying vec3 normalInterp;\\r\\nvarying vec3 vertPos;\\r\\nvarying highp vec2 vTextureCoord;\\r\\n\\r\\nuniform sampler2D uSampler;\\r\\n\\r\\nconst vec3 lightPos=vec3(1.,1.,1.);\\r\\nconst vec3 lightColor=vec3(1.,1.,1.);\\r\\nconst float lightPower=40.;\\r\\nconst vec3 ambientColor=vec3(.1,0.,0.);\\r\\nconst vec3 diffuseColor=vec3(1.0, 1.0, 1.0);\\r\\nconst vec3 specColor=vec3(1.,1.,1.);\\r\\nconst float shininess=16.;\\r\\nconst float screenGamma=2.2;// Assume the monitor is calibrated to the sRGB color space\\r\\n\\r\\nvoid main(){\\r\\n    \\r\\n    vec3 normal=normalize(normalInterp);\\r\\n    vec3 lightDir=lightPos-vertPos;\\r\\n    float distance=length(lightDir);\\r\\n    distance=distance*distance;\\r\\n    lightDir=normalize(lightDir);\\r\\n    \\r\\n    float lambertian=max(dot(lightDir,normal),0.);\\r\\n    float specular=0.;\\r\\n    \\r\\n    if(lambertian>0.){\\r\\n        \\r\\n        vec3 viewDir=normalize(-vertPos);\\r\\n        \\r\\n        vec3 halfDir=normalize(lightDir+viewDir);\\r\\n        float specAngle=max(dot(halfDir,normal),0.);\\r\\n        specular=pow(specAngle,shininess);\\r\\n    }\\r\\n    vec3 colorLinear=ambientColor+\\r\\n    diffuseColor*lambertian*lightColor*lightPower/distance+\\r\\n    specColor*specular*lightColor*lightPower/distance;\\r\\n    \\r\\n    vec3 colorGammaCorrected=pow(colorLinear,vec3(1./screenGamma));\\r\\n    \\r\\n    highp vec4 texelColor=texture2D(uSampler,vTextureCoord);\\r\\n    \\r\\n    gl_FragColor=vec4(texelColor.rgb*colorGammaCorrected,texelColor.a);\\r\\n}\\r\\n\";","export function getWebGL2RenderingContext(\r\n  canvas: HTMLCanvasElement\r\n): WebGL2RenderingContext {\r\n  const renderingContext = canvas.getContext(\"webgl2\")\r\n  if (!renderingContext) {\r\n    throw new Error(\r\n      \"Unable to initialize WebGL. Your browser or machine may not support it.\"\r\n    )\r\n  }\r\n\r\n  return renderingContext\r\n}\r\nexport function glCreateBuffer(gl: WebGL2RenderingContext): WebGLBuffer {\r\n  const webGLBuffer = gl.createBuffer()\r\n  if (!webGLBuffer) {\r\n    throw new Error(\"Failed to create buffer\")\r\n  }\r\n  return webGLBuffer\r\n}\r\n\r\nexport function glCreateShader(\r\n  gl: WebGL2RenderingContext,\r\n  type: number\r\n): WebGLShader {\r\n  const shader = gl.createShader(type)\r\n  if (!shader) {\r\n    throw new Error(\"Failed to create shader.\")\r\n  }\r\n  return shader\r\n}\r\n\r\nexport function glCreateProgram(gl: WebGL2RenderingContext): WebGLProgram {\r\n  const program = gl.createProgram()\r\n  if (!program) {\r\n    throw new Error(\"Failed to create program.\")\r\n  }\r\n  return program\r\n}\r\n\r\nexport const loadShader = (\r\n  gl: WebGL2RenderingContext,\r\n  type: number,\r\n  source: string\r\n): WebGLShader => {\r\n  const shader = glCreateShader(gl, type)\r\n\r\n  gl.shaderSource(shader, source)\r\n  gl.compileShader(shader)\r\n\r\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n    const shaderInfoLog = gl.getShaderInfoLog(shader)\r\n    gl.deleteShader(shader)\r\n    throw new Error(`An error occurred compiling the shaders: ${shaderInfoLog}`)\r\n  }\r\n\r\n  return shader\r\n}\r\n\r\nexport const loadTexture = (\r\n  gl: WebGL2RenderingContext,\r\n  url: string\r\n): WebGLTexture => {\r\n  const texture = gl.createTexture()\r\n  if (!texture) {\r\n    throw new Error(\"Failed to create texture.\")\r\n  }\r\n  gl.bindTexture(gl.TEXTURE_2D, texture)\r\n\r\n  const level = 0\r\n  const internalFormat = gl.RGBA\r\n  const width = 1\r\n  const height = 1\r\n  const border = 0\r\n  const srcFormat = gl.RGBA\r\n  const srcType = gl.UNSIGNED_BYTE\r\n  const pixel = new Uint8Array([255, 20, 147, 255])\r\n  gl.texImage2D(\r\n    gl.TEXTURE_2D,\r\n    level,\r\n    internalFormat,\r\n    width,\r\n    height,\r\n    border,\r\n    srcFormat,\r\n    srcType,\r\n    pixel\r\n  )\r\n\r\n  const isPowerOf2 = (value: number) => (value & (value - 1)) === 0\r\n  const image = new Image()\r\n  image.onload = () => {\r\n    gl.bindTexture(gl.TEXTURE_2D, texture)\r\n    gl.texImage2D(\r\n      gl.TEXTURE_2D,\r\n      level,\r\n      internalFormat,\r\n      srcFormat,\r\n      srcType,\r\n      image\r\n    )\r\n\r\n    if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\r\n      gl.generateMipmap(gl.TEXTURE_2D)\r\n    } else {\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR)\r\n    }\r\n  }\r\n  image.src = url\r\n\r\n  return texture\r\n}\r\n\r\nexport const initShaderProgram = (\r\n  gl: WebGL2RenderingContext,\r\n  vsSource: string,\r\n  fsSource: string\r\n): WebGLProgram => {\r\n  const vertexShader = loadShader(gl, gl.VERTEX_SHADER, vsSource)\r\n  const fragmentShader = loadShader(gl, gl.FRAGMENT_SHADER, fsSource)\r\n  const shaderProgram = glCreateProgram(gl)\r\n\r\n  gl.attachShader(shaderProgram, vertexShader)\r\n  gl.attachShader(shaderProgram, fragmentShader)\r\n  gl.linkProgram(shaderProgram)\r\n\r\n  if (!gl.getProgramParameter(shaderProgram, gl.LINK_STATUS)) {\r\n    throw new Error(\r\n      `Unable to initialize the shader program: ${gl.getProgramInfoLog(\r\n        shaderProgram\r\n      )}`\r\n    )\r\n  }\r\n\r\n  return shaderProgram\r\n}\r\n","export const cubePositions = [\r\n // Front face\r\n -1.0, -1.0,  1.0,\r\n  1.0, -1.0,  1.0,\r\n  1.0,  1.0,  1.0,\r\n -1.0,  1.0,  1.0,\r\n\r\n // Back face\r\n -1.0, -1.0, -1.0,\r\n -1.0,  1.0, -1.0,\r\n  1.0,  1.0, -1.0,\r\n  1.0, -1.0, -1.0,\r\n\r\n // Top face\r\n -1.0,  1.0, -1.0,\r\n -1.0,  1.0,  1.0,\r\n  1.0,  1.0,  1.0,\r\n  1.0,  1.0, -1.0,\r\n\r\n // Bottom face\r\n -1.0, -1.0, -1.0,\r\n  1.0, -1.0, -1.0,\r\n  1.0, -1.0,  1.0,\r\n -1.0, -1.0,  1.0,\r\n\r\n // Right face\r\n  1.0, -1.0, -1.0,\r\n  1.0,  1.0, -1.0,\r\n  1.0,  1.0,  1.0,\r\n  1.0, -1.0,  1.0,\r\n\r\n // Left face\r\n -1.0, -1.0, -1.0,\r\n -1.0, -1.0,  1.0,\r\n -1.0,  1.0,  1.0,\r\n -1.0,  1.0, -1.0,\r\n]\r\n\r\nexport const cubeFaceColors = [\r\n    [1.0,  1.0,  1.0,  1.0],    // Front face: white\r\n    [1.0,  0.0,  0.0,  1.0],    // Back face: red\r\n    [0.0,  1.0,  0.0,  1.0],    // Top face: green\r\n    [0.0,  0.0,  1.0,  1.0],    // Bottom face: blue\r\n    [1.0,  1.0,  0.0,  1.0],    // Right face: yellow\r\n    [1.0,  0.0,  1.0,  1.0],    // Left face: purple\r\n  ]\r\n\r\nexport const cubeIndices = [\r\n    0,  1,  2,      0,  2,  3,    // front\r\n    4,  5,  6,      4,  6,  7,    // back\r\n    8,  9,  10,     8,  10, 11,   // top\r\n    12, 13, 14,     12, 14, 15,   // bottom\r\n    16, 17, 18,     16, 18, 19,   // right\r\n    20, 21, 22,     20, 22, 23,   // left\r\n  ]\r\n\r\nexport const cubeTextureCoordinates = [\r\n    // Front\r\n    0.0,  0.0,\r\n    1.0,  0.0,\r\n    1.0,  1.0,\r\n    0.0,  1.0,\r\n    // Back\r\n    0.0,  0.0,\r\n    1.0,  0.0,\r\n    1.0,  1.0,\r\n    0.0,  1.0,\r\n    // Top\r\n    0.0,  0.0,\r\n    1.0,  0.0,\r\n    1.0,  1.0,\r\n    0.0,  1.0,\r\n    // Bottom\r\n    0.0,  0.0,\r\n    1.0,  0.0,\r\n    1.0,  1.0,\r\n    0.0,  1.0,\r\n    // Right\r\n    0.0,  0.0,\r\n    1.0,  0.0,\r\n    1.0,  1.0,\r\n    0.0,  1.0,\r\n    // Left\r\n    0.0,  0.0,\r\n    1.0,  0.0,\r\n    1.0,  1.0,\r\n    0.0,  1.0,\r\n  ]\r\n\r\nexport const cubeVertexNormals = [\r\n  // Front\r\n   0.0,  0.0,  1.0,\r\n   0.0,  0.0,  1.0,\r\n   0.0,  0.0,  1.0,\r\n   0.0,  0.0,  1.0,\r\n\r\n  // Back\r\n   0.0,  0.0, -1.0,\r\n   0.0,  0.0, -1.0,\r\n   0.0,  0.0, -1.0,\r\n   0.0,  0.0, -1.0,\r\n\r\n  // Top\r\n   0.0,  1.0,  0.0,\r\n   0.0,  1.0,  0.0,\r\n   0.0,  1.0,  0.0,\r\n   0.0,  1.0,  0.0,\r\n\r\n  // Bottom\r\n   0.0, -1.0,  0.0,\r\n   0.0, -1.0,  0.0,\r\n   0.0, -1.0,  0.0,\r\n   0.0, -1.0,  0.0,\r\n\r\n  // Right\r\n   1.0,  0.0,  0.0,\r\n   1.0,  0.0,  0.0,\r\n   1.0,  0.0,  0.0,\r\n   1.0,  0.0,  0.0,\r\n\r\n  // Left\r\n  -1.0,  0.0,  0.0,\r\n  -1.0,  0.0,  0.0,\r\n  -1.0,  0.0,  0.0,\r\n  -1.0,  0.0,  0.0\r\n]\r\n","export default __webpack_public_path__ + \"static/media/uv-reference.dba5e4c6.png\";","import { mat4 } from \"gl-matrix\"\r\nimport { FunctionComponent, useEffect, useRef, useState } from \"react\"\r\nimport {\r\n  getWebGL2RenderingContext,\r\n  glCreateBuffer,\r\n  initShaderProgram,\r\n  loadTexture,\r\n} from \"@/helpers/gl-wrapper\"\r\nimport {\r\n  cubeIndices,\r\n  cubePositions,\r\n  cubeTextureCoordinates,\r\n  cubeVertexNormals,\r\n} from \"@/scene-objects/cube\"\r\nimport uvTextureReference from \"@/textures/uv-reference.png\"\r\nimport { useWindowSize } from \"@/helpers/hooks/use-resize\"\r\nconst vsBlinnPhong = require(\"@/shaders/blinn-phong.vert\").default\r\nconst fsBlinnPhong = require(\"@/shaders/blinn-phong.frag\").default\r\n\r\ninterface WebGLCanvasContainerProps {\r\n  isPlaying: boolean\r\n  scale: number\r\n  rotationX: number\r\n  rotationY: number\r\n  rotationZ: number\r\n}\r\n\r\nconst WebGLCanvasContainer: FunctionComponent<WebGLCanvasContainerProps> = (\r\n  props\r\n) => {\r\n  const { isPlaying, scale, rotationX, rotationY, rotationZ } = props\r\n  const canvas = useRef<HTMLCanvasElement>(null)\r\n  const [gl, setGL] = useState<WebGL2RenderingContext>()\r\n  const cubeRotation = useRef(0.0)\r\n  const requestRef = useRef<number>()\r\n  const then = useRef<DOMHighResTimeStamp>(0)\r\n\r\n  // Probably there's a better way to prevent rebinding buffers on rerenders...\r\n  const shaderProgram = useRef<WebGLProgram>()\r\n  const texture = useRef<WebGLTexture>()\r\n  const sceneObjectPositionBuffer = useRef<WebGLBuffer>()\r\n  const sceneObjectTextureCoordBuffer = useRef<WebGLBuffer>()\r\n  const sceneObjectIndicesBuffer = useRef<WebGLBuffer>()\r\n  const sceneObjectNormalBuffer = useRef<WebGLBuffer>()\r\n  const modelViewMatrix = useRef<mat4>()\r\n\r\n  const setRenderingContext = () => {\r\n    if (!canvas.current) return\r\n\r\n    const renderingContext = getWebGL2RenderingContext(canvas.current)\r\n\r\n    setGL(renderingContext)\r\n  }\r\n\r\n  const [width, height] = useWindowSize()\r\n\r\n  useEffect(setRenderingContext, [canvas])\r\n\r\n  useEffect(() => {\r\n    if (!gl) return\r\n\r\n    const defaultClearColor: [number, number, number, number] = [\r\n      0.26,\r\n      0.26,\r\n      0.29,\r\n      1.0,\r\n    ]\r\n    gl.clearColor(...defaultClearColor)\r\n    gl.clear(gl.COLOR_BUFFER_BIT)\r\n\r\n    if (!shaderProgram.current)\r\n      shaderProgram.current = initShaderProgram(gl, vsBlinnPhong, fsBlinnPhong)\r\n\r\n    const programInfo = {\r\n      program: shaderProgram.current,\r\n      attribLocations: {\r\n        vertexPosition: gl.getAttribLocation(\r\n          shaderProgram.current,\r\n          \"aVertexPosition\"\r\n        ),\r\n        vertexColor: gl.getAttribLocation(\r\n          shaderProgram.current,\r\n          \"aVertexColor\"\r\n        ),\r\n        textureCoord: gl.getAttribLocation(\r\n          shaderProgram.current,\r\n          \"aTextureCoord\"\r\n        ),\r\n        vertexNormal: gl.getAttribLocation(\r\n          shaderProgram.current,\r\n          \"aVertexNormal\"\r\n        ),\r\n      },\r\n      uniformLocations: {\r\n        projectionMatrix: gl.getUniformLocation(\r\n          shaderProgram.current,\r\n          \"uProjectionMatrix\"\r\n        ),\r\n        modelViewMatrix: gl.getUniformLocation(\r\n          shaderProgram.current,\r\n          \"uModelViewMatrix\"\r\n        ),\r\n        normalMatrix: gl.getUniformLocation(\r\n          shaderProgram.current,\r\n          \"uNormalMatrix\"\r\n        ),\r\n        uSampler: gl.getUniformLocation(shaderProgram.current, \"uSampler\"),\r\n      },\r\n    }\r\n\r\n    if (!texture.current) texture.current = loadTexture(gl, uvTextureReference)\r\n\r\n    const drawScene = (\r\n      gl: WebGL2RenderingContext,\r\n      info: typeof programInfo,\r\n      deltaTime: number\r\n    ) => {\r\n      gl.viewport(0, 0, gl.canvas.width, gl.canvas.height)\r\n      gl.clearColor(...defaultClearColor)\r\n      gl.clearDepth(1.0)\r\n      gl.enable(gl.DEPTH_TEST)\r\n      gl.depthFunc(gl.LEQUAL)\r\n      gl.clear(gl.COLOR_BUFFER_BIT | gl.DEPTH_BUFFER_BIT)\r\n\r\n      const fieldOfView = (45 * Math.PI) / 180\r\n      const aspect =\r\n        (gl.canvas as HTMLCanvasElement).clientWidth /\r\n        (gl.canvas as HTMLCanvasElement).clientHeight\r\n\r\n      const zNear = 0.1\r\n      const zFar = 100.0\r\n      const projectionMatrix = mat4.create()\r\n\r\n      mat4.perspective(projectionMatrix, fieldOfView, aspect, zNear, zFar)\r\n\r\n      modelViewMatrix.current = mat4.create()\r\n      mat4.translate(modelViewMatrix.current, modelViewMatrix.current, [\r\n        0.0,\r\n        0.0,\r\n        -6.0,\r\n      ])\r\n      mat4.scale(modelViewMatrix.current, modelViewMatrix.current, [\r\n        scale,\r\n        scale,\r\n        scale,\r\n      ])\r\n\r\n      mat4.rotate(\r\n        modelViewMatrix.current,\r\n        modelViewMatrix.current,\r\n        isPlaying ? cubeRotation.current * 0.5 : rotationX,\r\n        [1, 0, 0]\r\n      )\r\n      mat4.rotate(\r\n        modelViewMatrix.current,\r\n        modelViewMatrix.current,\r\n        isPlaying ? cubeRotation.current * 0.2 : rotationY,\r\n        [0, 1, 0]\r\n      )\r\n      mat4.rotate(\r\n        modelViewMatrix.current,\r\n        modelViewMatrix.current,\r\n        isPlaying ? cubeRotation.current : rotationZ,\r\n        [0, 0, 1]\r\n      )\r\n\r\n      const normalMatrix = mat4.create()\r\n      mat4.invert(normalMatrix, modelViewMatrix.current)\r\n      mat4.transpose(normalMatrix, normalMatrix)\r\n\r\n      if (!sceneObjectPositionBuffer.current) {\r\n        sceneObjectPositionBuffer.current = glCreateBuffer(gl)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, sceneObjectPositionBuffer.current)\r\n        gl.bufferData(\r\n          gl.ARRAY_BUFFER,\r\n          new Float32Array(cubePositions),\r\n          gl.STATIC_DRAW\r\n        )\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, sceneObjectPositionBuffer.current)\r\n        gl.vertexAttribPointer(\r\n          info.attribLocations.vertexPosition,\r\n          3,\r\n          gl.FLOAT,\r\n          false,\r\n          0,\r\n          0\r\n        )\r\n        gl.enableVertexAttribArray(info.attribLocations.vertexPosition)\r\n      }\r\n\r\n      if (!sceneObjectTextureCoordBuffer.current) {\r\n        sceneObjectTextureCoordBuffer.current = glCreateBuffer(gl)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, sceneObjectTextureCoordBuffer.current)\r\n        gl.bufferData(\r\n          gl.ARRAY_BUFFER,\r\n          new Float32Array(cubeTextureCoordinates),\r\n          gl.STATIC_DRAW\r\n        )\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, sceneObjectTextureCoordBuffer.current)\r\n        gl.vertexAttribPointer(\r\n          info.attribLocations.textureCoord,\r\n          2,\r\n          gl.FLOAT,\r\n          false,\r\n          0,\r\n          0\r\n        )\r\n        gl.enableVertexAttribArray(info.attribLocations.textureCoord)\r\n      }\r\n      if (!sceneObjectIndicesBuffer.current) {\r\n        sceneObjectIndicesBuffer.current = glCreateBuffer(gl)\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, sceneObjectIndicesBuffer.current)\r\n        gl.bufferData(\r\n          gl.ELEMENT_ARRAY_BUFFER,\r\n          new Uint16Array(cubeIndices),\r\n          gl.STATIC_DRAW\r\n        )\r\n      }\r\n      if (!sceneObjectNormalBuffer.current) {\r\n        sceneObjectNormalBuffer.current = glCreateBuffer(gl)\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, sceneObjectNormalBuffer.current)\r\n        gl.bufferData(\r\n          gl.ARRAY_BUFFER,\r\n          new Float32Array(cubeVertexNormals),\r\n          gl.STATIC_DRAW\r\n        )\r\n        gl.vertexAttribPointer(\r\n          info.attribLocations.vertexNormal,\r\n          3,\r\n          gl.FLOAT,\r\n          false,\r\n          0,\r\n          0\r\n        )\r\n        gl.enableVertexAttribArray(info.attribLocations.vertexNormal)\r\n      }\r\n      gl.useProgram(info.program)\r\n\r\n      gl.uniformMatrix4fv(\r\n        info.uniformLocations.projectionMatrix,\r\n        false,\r\n        projectionMatrix\r\n      )\r\n      gl.uniformMatrix4fv(\r\n        info.uniformLocations.modelViewMatrix,\r\n        false,\r\n        modelViewMatrix.current\r\n      )\r\n      gl.uniformMatrix4fv(\r\n        info.uniformLocations.normalMatrix,\r\n        false,\r\n        normalMatrix\r\n      )\r\n\r\n      gl.activeTexture(gl.TEXTURE0)\r\n      gl.bindTexture(gl.TEXTURE_2D, texture.current!)\r\n      gl.uniform1i(programInfo.uniformLocations.uSampler, 0)\r\n\r\n      const offset = 0\r\n      const vertexCount = 36\r\n      gl.drawElements(gl.TRIANGLES, vertexCount, gl.UNSIGNED_SHORT, offset)\r\n      cubeRotation.current -= deltaTime * ((isPlaying as unknown) as number)\r\n    }\r\n\r\n    const render = (now: DOMHighResTimeStamp) => {\r\n      now *= 0.001\r\n      const deltaTime = now - then.current\r\n      then.current = now\r\n\r\n      drawScene(gl, programInfo, deltaTime)\r\n\r\n      requestRef.current = requestAnimationFrame(render)\r\n    }\r\n\r\n    requestAnimationFrame(render)\r\n    return () => {\r\n      cancelAnimationFrame(requestRef.current!)\r\n    }\r\n  }, [gl, isPlaying, scale, rotationX, rotationY, rotationZ])\r\n\r\n  return (\r\n    <canvas ref={canvas} id=\"glCanvas\" width={width} height={height}></canvas>\r\n  )\r\n}\r\n\r\nexport default WebGLCanvasContainer\r\n","import { useLayoutEffect, useState } from \"react\"\r\n\r\nexport const useWindowSize = () => {\r\n  const [size, setSize] = useState([window.innerWidth, window.innerHeight])\r\n  useLayoutEffect(() => {\r\n    const updateSize = () => {\r\n      setSize([window.innerWidth, window.innerHeight])\r\n    }\r\n    window.addEventListener(\"resize\", updateSize)\r\n    updateSize()\r\n    return () => window.removeEventListener(\"resize\", updateSize)\r\n  }, [])\r\n  return size\r\n}\r\n","import { FunctionComponent } from \"react\"\r\nimport \"./button.scss\"\r\n\r\ninterface ButtonProps {\r\n  className: string\r\n  title: string\r\n  type?: \"default\" | \"error\"\r\n  children: React.ReactNode\r\n  onClick: React.MouseEventHandler<HTMLButtonElement>\r\n}\r\n\r\nconst Button: FunctionComponent<ButtonProps> = (props) => {\r\n  const { title, children, className, type, onClick } = props\r\n\r\n  return (\r\n    <button\r\n      className={`button ${type} ${className}`}\r\n      title={title}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </button>\r\n  )\r\n}\r\n\r\nButton.defaultProps = {\r\n  type: \"default\",\r\n}\r\n\r\nexport default Button\r\n","import { FunctionComponent } from \"react\"\r\nimport \"./range-input.scss\"\r\n\r\ninterface RangeInputProps {\r\n  label: string\r\n  name: string\r\n  id: string\r\n  value: number\r\n  min: number\r\n  max: number\r\n  step?: number\r\n  disabled?: boolean\r\n  className?: string\r\n  onChange: React.ChangeEventHandler<HTMLInputElement>\r\n}\r\n\r\nconst RangeInput: FunctionComponent<RangeInputProps> = (props) => {\r\n  const { label, className, ...rest } = props\r\n  return (\r\n    <label className={`range-input-label ${className}`} htmlFor={rest.id}>\r\n      {label}\r\n      <input className=\"range-input\" type=\"range\" {...rest} />\r\n      {rest.value}\r\n    </label>\r\n  )\r\n}\r\n\r\nRangeInput.defaultProps = {\r\n  className: \"\",\r\n  disabled: false,\r\n}\r\n\r\nexport default RangeInput\r\n","import { FunctionComponent } from \"react\"\r\nimport { Button } from \"@/components/common/button\"\r\nimport { RangeInput } from \"@/components/common/range-input\"\r\nimport \"./transform-actions-menu.scss\"\r\n\r\ninterface TransformActionsMenuViewProps {\r\n  isPlaying: boolean\r\n  setIsPlaying: (value: boolean) => void\r\n  scale: number\r\n  setScale: (value: number) => void\r\n  rotationX: number\r\n  setRotationX: (value: number) => void\r\n  rotationY: number\r\n  setRotationY: (value: number) => void\r\n  rotationZ: number\r\n  setRotationZ: (value: number) => void\r\n  error: boolean\r\n  setError: (value: boolean) => void\r\n}\r\n\r\nconst TransformActionsMenuView: FunctionComponent<TransformActionsMenuViewProps> = (\r\n  props\r\n) => {\r\n  const {\r\n    isPlaying,\r\n    setIsPlaying,\r\n    scale,\r\n    setScale,\r\n    rotationX,\r\n    setRotationX,\r\n    rotationY,\r\n    setRotationY,\r\n    rotationZ,\r\n    setRotationZ,\r\n    error,\r\n    setError,\r\n  } = props\r\n\r\n  const buttonAction = isPlaying ? \"⏸️ Pause\" : \"▶️ Play\"\r\n\r\n  const handlePlayPause = () => {\r\n    setIsPlaying(!isPlaying)\r\n  }\r\n\r\n  const handleChangeInputValue = (\r\n    setter: (value: number) => void\r\n  ): React.ChangeEventHandler<HTMLInputElement> => (event) => {\r\n    setter(parseFloat(event.currentTarget.value))\r\n  }\r\n\r\n  const handleThrowError = () => {\r\n    setError(true)\r\n  }\r\n\r\n  if (error) {\r\n    setError(false)\r\n    throw new Error(\r\n      'HTTPCode: 200; payload: { status: \"error\", message: \"Failed with success!\" }'\r\n    )\r\n  }\r\n\r\n  const maxRotation = Math.PI * 2\r\n\r\n  return (\r\n    <menu type=\"toolbar\" className=\"menu\">\r\n      <li className=\"menu-item\">\r\n        <RangeInput\r\n          label=\"Scale (xyz)\"\r\n          name=\"scale-range\"\r\n          id=\"scale-range\"\r\n          value={scale}\r\n          min={0.1}\r\n          max={2}\r\n          step={0.1}\r\n          onChange={handleChangeInputValue(setScale)}\r\n        />\r\n      </li>\r\n      {isPlaying && (\r\n        <span className=\"nope\">\r\n          🚫 Can not change rotation while the animation is playing !\r\n        </span>\r\n      )}\r\n      <li className=\"menu-item\">\r\n        <RangeInput\r\n          label=\"Rotation (x)\"\r\n          name=\"rotation-x-range\"\r\n          id=\"rotation-x-range\"\r\n          value={rotationX}\r\n          min={0}\r\n          max={maxRotation}\r\n          step={0.1}\r\n          disabled={isPlaying}\r\n          onChange={handleChangeInputValue(setRotationX)}\r\n        />\r\n      </li>\r\n      <li className=\"menu-item\">\r\n        <RangeInput\r\n          label=\"Rotation (y)\"\r\n          name=\"rotation-y-range\"\r\n          id=\"rotation-y-range\"\r\n          value={rotationY}\r\n          min={0}\r\n          max={maxRotation}\r\n          step={0.1}\r\n          disabled={isPlaying}\r\n          onChange={handleChangeInputValue(setRotationY)}\r\n        />\r\n      </li>\r\n      <li className=\"menu-item\">\r\n        <RangeInput\r\n          label=\"Rotation (z)\"\r\n          name=\"rotation-z-range\"\r\n          id=\"rotation-z-range\"\r\n          value={rotationZ}\r\n          min={0}\r\n          max={maxRotation}\r\n          step={0.1}\r\n          disabled={isPlaying}\r\n          onChange={handleChangeInputValue(setRotationZ)}\r\n        />\r\n      </li>\r\n      <li className=\"menu-item play-pause\">\r\n        <Button\r\n          className=\"btn-play-pause\"\r\n          title={buttonAction}\r\n          onClick={handlePlayPause}\r\n        >\r\n          {buttonAction}\r\n        </Button>\r\n      </li>\r\n      <li className=\"menu-item\">\r\n        <Button\r\n          className=\"btn-error\"\r\n          title=\"Throw error\"\r\n          type=\"error\"\r\n          onClick={handleThrowError}\r\n        >\r\n          💥 Throw error\r\n        </Button>\r\n      </li>\r\n    </menu>\r\n  )\r\n}\r\n\r\nexport default TransformActionsMenuView\r\n","import \"./App.scss\"\nimport { WebGLCanvasComponent } from \"./components/webgl-canvas\"\nimport { useState } from \"react\"\nimport { TransformActionsMenuComponent } from \"./components/transform-actions-menu\"\n\nfunction App() {\n  // TODO: Create a context\n  const [isPlaying, setIsPlaying] = useState(true)\n  const [scale, setScale] = useState(1)\n  const [rotationX, setRotationX] = useState(0)\n  const [rotationY, setRotationY] = useState(0)\n  const [rotationZ, setRotationZ] = useState(0)\n  const [error, setError] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <WebGLCanvasComponent\n        isPlaying={isPlaying}\n        scale={scale}\n        rotationX={rotationX}\n        rotationY={rotationY}\n        rotationZ={rotationZ}\n      />\n      <TransformActionsMenuComponent\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        scale={scale}\n        setScale={setScale}\n        rotationX={rotationX}\n        setRotationX={setRotationX}\n        rotationY={rotationY}\n        setRotationY={setRotationY}\n        rotationZ={rotationZ}\n        setRotationZ={setRotationZ}\n        error={error}\n        setError={setError}\n      />\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = (onPerfEntry: any) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import \"./error-boundary.scss\"\r\nimport { ErrorInfo, FunctionComponent } from \"react\"\r\nimport { Button } from \"@/components/common/button\"\r\n\r\ninterface ErrorBoundaryViewProps {\r\n  error: Error | null\r\n  errorInfo: ErrorInfo | null\r\n}\r\n\r\nconst ErrorBoundaryView: FunctionComponent<ErrorBoundaryViewProps> = (\r\n  props\r\n) => {\r\n  const handleGoBack = () => {\r\n    // eslint-disable-next-line no-self-assign\r\n    window.location.href = window.location.href\r\n  }\r\n  return (\r\n    <section className=\"error-boundary\">\r\n      <h1 className=\"error-boundary__title\">Something wrong is not right!</h1>\r\n      <h2 className=\"error-boundary__message\">{props.error?.message}</h2>\r\n      <p className=\"error-boundary__stack\">{props.errorInfo?.componentStack}</p>\r\n      <Button\r\n        className=\"error-boundary__btn-go-back\"\r\n        title=\"Go back\"\r\n        onClick={handleGoBack}\r\n      >\r\n        I want to be monke! 🐵\r\n      </Button>\r\n    </section>\r\n  )\r\n}\r\n\r\nexport default ErrorBoundaryView\r\n","import React, { ErrorInfo } from \"react\"\r\nimport ErrorBoundaryView from \"./error-boundary-view\"\r\n\r\ninterface ErrorBoundaryProps {\r\n  children: React.ReactNode\r\n}\r\n\r\ninterface ErrorBoundaryState {\r\n  hasError: boolean\r\n  error: Error | null\r\n  errorInfo: ErrorInfo | null\r\n}\r\n\r\nclass ErrorBoundary extends React.Component<\r\n  ErrorBoundaryProps,\r\n  ErrorBoundaryState\r\n> {\r\n  constructor(props: ErrorBoundaryProps) {\r\n    super(props)\r\n    this.state = { hasError: false, error: null, errorInfo: null }\r\n  }\r\n\r\n  static getDerivedStateFromError(_error: Error) {\r\n    return { hasError: true }\r\n  }\r\n\r\n  componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    this.setState({ ...this.state, error, errorInfo })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <ErrorBoundaryView\r\n          error={this.state.error}\r\n          errorInfo={this.state.errorInfo}\r\n        />\r\n      )\r\n    }\r\n\r\n    return this.props.children\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.scss\"\nimport App from \"./App\"\nimport reportWebVitals from \"./reportWebVitals\"\nimport { ErrorBoundaryComponent } from \"./components/common/error-boundary\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <ErrorBoundaryComponent>\n      <App />\n    </ErrorBoundaryComponent>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log)\n"],"sourceRoot":""}